version: "3.9"
services:

  foyer:
    container_name: foyer
    image: tp_foyer
    build:
      context: .
      dockerfile: ./dockerfile
    ports:
      - "8089:8089"
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysqldb:3306/foyerProject\db?&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      spring.jpa.hibernate.ddl-auto : update
      spring.jpa.properties.hibernate.dialect : org.hibernate.dialect.MySQL5Dialect
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
    depends_on:
      - mysqldb
    volumes:
      - .m2:/root/.m2
    networks:
      - my-network


  mysqldb:
    image: "mysql:5.6"
    container_name: mysql-container
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=foyer
    ports:
      - "3306:3306"
    restart: unless-stopped
    volumes:
      - db:/var/lib/mysql
    networks:
      - my-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    restart: unless-stopped


  grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - "3000:3000"
      environment:
        - GF_SECURITY_ADMIN_USER=admin
        - GF_SECURITY_ADMIN_PASSWORD=admin
      volumes:
        - grafana-data:/var/lib/grafana
      restart: unless-stopped

  node-exporter:
      image: prom/node-exporter:latest
      container_name: node_exporter
      command: "--path.rootfs=/host"
      pid: host
      restart: unless-stopped
      volumes:
        - /:/host:ro,rslave
  cadvisor:
      image: gcr.io/cadvisor/cadvisor:latest
      container_name: cadvisor
      ports:
        - 8087:8080
      volumes:
        - /:/rootfs:ro
        - /run:/run:ro
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        - /dev/disk/:/dev/disk:ro
      devices:
        - /dev/kmsg
      privileged: true
      restart: unless-stopped

volumes:
  db :
networks:
  my-network: